version: '3.7'

volumes:
    dbus-volume:

services:
  dbus-service:
    image: wirepas/gateway_dbus_service:${GATEWAY_TAG:-latest}
    container_name: dbus
    restart: always
    volumes:
      - type: volume
        source: dbus-volume
        target: /var/run/dbus
    logging:
      driver: journald


  transport-service:
    image: wirepas/gateway_transport_service:${GATEWAY_TAG:-latest}
    container_name: transport-service
    environment:
      # To be modified
      WM_GW_ID:
      WM_GW_MODEL:
      WM_GW_VERSION:
      WM_SERVICES_MQTT_HOSTNAME:
      WM_SERVICES_MQTT_PORT:
      WM_SERVICES_MQTT_USERNAME:
      WM_SERVICES_MQTT_PASSWORD:
    restart: always
    depends_on:
      - dbus-service
    volumes:
      - type: volume
        source: dbus-volume
        target: /var/run/dbus
    logging:
      driver: journald


  sink-service:
    image: wirepas/gateway_sink_service:${GATEWAY_TAG:-latest}
    container_name: sink-service
    restart: on-failure
    depends_on:
      - dbus-service
    devices:
      # To be modified
      - <path to from_host>:/dev/mysink
    environment:
      WM_GW_SINK_BAUDRATE:
      WM_GW_SINK_ID:
      # Do not change (path of sink in container)
      WM_GW_SINK_UART_PORT: /dev/mysink
    volumes:
      - type: volume
        source: dbus-volume
        target: /var/run/dbus
    logging:
      driver: journald

  ipv6-service:
    # For now only a edge tag exists (tag will later be replaced by ${GATEWAY_TAG:-latest})
    image: wirepas/gateway_ipv6_service:edge
    container_name: ipv6-service
    restart: always
    network_mode: 'host'
    environment:
      PYTHONUNBUFFERED: 1
      # Off mesh IPV6 address (optional)
      WM_IPV6_OFF_MESH_SERVICE:
      # Which interface to use from the host (if a VPN is in use could be tap0 for example)
      WM_IPV6_EXTERNAL_INTERFACE:
    depends_on:
      - dbus-service
    cap_add:
      - NET_ADMIN
    sysctls:
      # Ensure minimal configuration for the host network
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.all.proxy_ndp=1
      - net.ipv6.conf.all.accept_ra=2
    devices:
       # This is needed to create a Tun interface
       - '/dev/net/tun:/dev/net/tun'
    volumes:
      - type: volume
        source: dbus-volume
        target: /var/run/dbus
    logging:
      driver: journald
